# NOTE: 
# - Currently, this configuration does not compile the MATLAB and Python 
#	APIs. After compiling, you will need to download the ISSM pre-compiled 
#	binaries from https://issm.jpl.nasa.gov/download/binaries, copy the 
#	contents of lib/ to $ISSM_DIR/lib-precompiled, then add 
#	$ISSM_DIR/lib-precompiled to the path in MATLAB or Python.
#

#--------------------#
# ISSM Configuration #
#--------------------#

ISSM_CONFIG='\
	--prefix=${ISSM_DIR} \
	--disable-static \
	--enable-development \
	--enable-debugging \
	--without-wrappers \
	--with-numthreads=8 \
	--with-fortran-lib="-L/opt/homebrew/Cellar/gcc/12.2.0/lib/gcc/12 -lgfortran" \
	--with-mpi-include=${ISSM_DIR}/externalpackages/petsc/install/include \
	--with-mpi-libflags="-L${ISSM_DIR}/externalpackages/petsc/install/lib -lmpi -lmpicxx -lmpifort" \
	--with-blas-lapack-dir=${ISSM_DIR}/externalpackages/petsc/install \
	--with-metis-dir=${ISSM_DIR}/externalpackages/petsc/install \
	--with-parmetis-dir=${ISSM_DIR}/externalpackages/petsc/install \
	--with-scalapack-dir=${ISSM_DIR}/externalpackages/petsc/install \
	--with-mumps-dir=${ISSM_DIR}/externalpackages/petsc/install \
	--with-petsc-dir=${ISSM_DIR}/externalpackages/petsc/install \
	--with-triangle-dir=${ISSM_DIR}/externalpackages/triangle/install \
	--with-chaco-dir=${ISSM_DIR}/externalpackages/chaco/install \
	--with-m1qn3-dir=${ISSM_DIR}/externalpackages/m1qn3/install \
	--with-semic-dir=${ISSM_DIR}/externalpackages/semic/install \
'

#-------------------#
# External Packages #
#-------------------#

# List of external packages to be installed and their installation scripts
EXTERNALPACKAGES="
	autotools	install-mac.sh
	cmake		install.sh
	petsc		install-3.17-mac-silicon.sh
	triangle	install-mac.sh
	chaco		install-mac.sh
	m1qn3		install.sh
	semic		install.sh
	shell2junit	install.sh
"

#---------#
# Testing #
#---------#

# Test suites
MATLAB_TEST=0
PYTHON_TEST=0
JAVASCRIPT_TEST=0
EXAMPLES_TEST=0

# Number of CPUs used in ISSM compilation
#
# NOTE: One is usually safer as some packages are very sensitive to parallel
# 		compilation
#
NUMCPUS_INSTALL=8

# Number of CPUs used in the nightly runs
NUMCPUS_RUN=1

# Nightly run options
#
# See documentation in test/NightlyRun/runme.* for more information
#
MATLAB_NROPTIONS=""
PYTHON_NROPTIONS=""
